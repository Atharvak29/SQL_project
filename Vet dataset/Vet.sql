/*
What is the average cost per procedure type?
Difficulty: Moderate
Analyze the cost effectiveness of various procedures by calculating the average price for each type.

Which procedure type generates the highest revenue for the clinic?
Difficulty: Moderate
Sum the revenues generated by each procedure type to determine which is most profitable.

What is the average age of pets undergoing each type of procedure?
Difficulty: Hard
Analyze if certain age groups of pets are more prone to specific procedures.

How does the frequency of procedures vary throughout the year?
Difficulty: Hard
Group procedure history data by month and year to identify trends or seasonality in the demand for different procedures.
Identify any correlations between pet type (kind) and the procedures they undergo. Are certain procedures more common for specific pet kinds?
Difficulty: Hard
Use statistical analysis to identify significant associations between the kind of pet and the procedures they undergo.

What are the average costs incurred by pet owners from different geographic regions (e.g., city or state)?
Difficulty: Hard
Group data by geographical identifiers like city or state to determine regional cost variations.

What percentage of pets have never had a procedure performed?
Difficulty: Moderate
Explore pet records to identify those who have never been linked to a procedure record.
Which owners tend to spend the most on pet healthcare, and how does this relate to pet age or type?
Difficulty: Hard
*/

use vet_data;
-- Q1 -- Q2
select proceduretype, avg(price) as avg_price from proceduresdetails
group by proceduretype
order by avg_price desc
limit 1;

-- Q3 
select ph.proceduretype, avg(p.age) as avg_age 
from pets p
join procedureshistory ph
on p.petid = ph.petid
group by ph.proceduretype;

-- Q4
select max(proceduretype), month(date), count(proceduretype) as cnt_procedure  from PROCEDURESHISTORY
group by  month(date);

-- q5
select p.kind , max(ph.proceduretype) from pets p
join procedureshistory ph
on p.petid = ph.petid
group by p.kind;

-- Q6

select o.city , avg(pd.price) as avg_per_city from owners o
join pets p on o.ownerid = p.ownerid
join procedureshistory ph on p.petid = ph.petid
join proceduresdetails pd on ph.proceduresubcode = pd.proceduresubcode
group by o.city
order by avg_per_city desc;

-- Q7
select * from  procedureshistory 
WHERE procedureType is null;

-- Q8
select o.NAME , sum(pd.price)as sum_price, p.age, p.kind from owners o
join pets p on o.ownerid = p.ownerid
join procedureshistory ph on p.petid = ph.petid
join proceduresdetails pd on ph.proceduresubcode = pd.proceduresubcode
group by o.name
order by sum_price desc;

-- q9
select p.kind,p.name ,p.age, count(ph.proceduretype) over(partition by p.kind) as cnt from pets p
join procedureshistory ph on p.petid = ph.petid;
-- group by p.kind;

-- q10
select pd.proceduretype ,ph.date ,avg(pd.price) over(partition by pd.proceduretype, month(ph.date) order by ph.date) from proceduresdetails pd
join procedureshistory ph on pd.proceduresubcode = ph.proceduresubcode;
-- group by pd.proceduretype, month(date);

select ph.petid , avg(pd.price), avg(pd.price) over () from proceduresdetails pd
join procedureshistory ph on pd.proceduresubcode = ph.proceduresubcode
group by ph.petid;

-- Q11
select p.name, sum(pd.price) as expense, case 
										 when sum(pd.price) > 1000 then "High Expense" 
                                         when sum(pd.price) > 500  and sum(pd.price) < 999 then "Moderate Expense"
                                         when sum(pd.price) < 500 then "Low Expense" 
                                         end as categories
from pets p
join procedureshistory ph on p.petid = ph.petid
join proceduresdetails pd on ph.proceduresubcode = pd.proceduresubcode
group by p.name;

select p.kind, count(ph.proceduretype) as cnt_procedure, dense_rank() over (partition by p.kind order by count(ph.proceduretype) desc) as rnk 
from pets p
join procedureshistory ph on p.petid = ph.petid
group by p.kind; --  case when count(cnt_procedure) then "very common" end as categories;



